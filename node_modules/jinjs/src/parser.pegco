/**
    @title JinJS Parser

    @author Christophe Eymard <christophe.eymard@ravelsoft.com>
 */

{
    tag_opening = "{%"
    tag_closing = "%}"

    comment_opening = "{#"
    comment_closing = "#}"

    print_opening = "{{"
    print_closing = "}}"

    comment_single_line = "#"
    tag_single_line = "%"

    nodes = require("./nodes").nodes
    # filters = require("./filters");

    inside_tag = false
    inside_single_line = false
}

toplevel
    = anything
    / space?

anything
    = any:any anything:anything { return any + anything; }
    / any

tag
    = "{%" bspl:"-"? space? tagname:identifier contents:anything space? espl:"-"? "%}"
    / "{%" bspl:"-"? space? end:identifier space? espl:"-"? "%}"

any
    = space
    / & { return inside_tag === false; } tag
    / & { return inside_single_line === false; } endline
    / char:. { return char; }

space
    = sp:[ \t]+ { return sp.join(""); }

endline
    = end1:"\n" sp:space? end:endline { return end1 + sp + end; }
    / "\n" { return "\n"; }

