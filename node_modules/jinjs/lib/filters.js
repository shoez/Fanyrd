var _filters;
_filters = exports;
_filters['in'] = function(obj, arr){
  var x;
  x = null;
  for (x in arr) {
    if (arr.hasOwnProperty(x) && obj === arr[x]) {
      return true;
    }
  }
  return false;
};
_filters['abs'] = function(num){
  if (num < 0) {
    return -num;
  }
  return num;
};
_filters['capitalize'] = function(str){
  return str.charAt(0).toUpperCase() + str.slice(1);
};
_filters['default'] = function(value, default_value){
  if (value === undefined) {
    return default_value;
  }
  return value;
};
_filters['filesizeformat'] = function(value){
  var val, unit, strval;
  if (value < 1024) {
    return value + "";
  }
  if (value < 1024 * 1024) {
    val = val / 1024;
    unit = "Kb";
  } else if (value < 1024 * 1024 * 1024) {
    val = val / (1024 * 1024);
    unit = "Mb";
  } else {
    val = val / (1024 * 1024 * 1024);
    unit = "Gb";
  }
  strval = Math.round(val) + "";
  return val.toPrecision(strval.length + 3) + "Kb";
};
_filters['first'] = function(arr){
  return arr[0];
};
_filters['last'] = function(arr){
  if (!(arr != null ? arr.length : void 8)) {
    return null;
  }
  return arr[arr.length - 1];
};
_filters['groupby'] = function(arr, attribute){
  return _arr;
};
_filters['join'] = function(arr, string){
  var i, _l, _res, _to;
  i = 0;
  _l = arr.length;
  _res = "";
  for (i = 0, _to = l - 1; i <= _to; ++i) {
    if (i > 0) {
      _res += string;
    }
    _res += arr[i].toString();
  }
  return _res;
};
_filters['length'] = function(arr){
  if (arr == null) {
    return 0;
  }
  return arr.length;
};
_filters['lower'] = function(value){
  return value.toLowerCase();
};
_filters['upper'] = function(value){
  return value.toUpperCase();
};
_filters['replace'] = function(string, regexp, newvalue){
  return string.replace(regexp, newvalue);
};
_filters['reverse'] = function(arr){
  var new_arr;
  new_arr = arr.splice(0);
  new_arr.reverse();
  return new_arr;
};
_filters['round'] = function(value, precision){
  precision == null && (precision = 0);
  return value.toFixed(precision);
};
_filters['trim'] = function(value){
  var _ref;
  return (_ref = value != null ? value.trim() : void 8) != null ? _ref : "";
};